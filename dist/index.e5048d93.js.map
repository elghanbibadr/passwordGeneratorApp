{"mappings":"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","sources":["src/Javascript/slider.js","src/Javascript/app.js","src/Javascript/generatePassword.js"],"sourcesContent":["\r\n class Slider{\r\n     constructor(){\r\n         this.input=document.querySelector('#slider');\r\n         this.label=document.querySelector('#Slidevariable');\r\n         this.input.addEventListener('input',this.intialieValue.bind(this));\r\n     }\r\n\r\n     intialieValue(){\r\n       return   this.label.innerHTML=this.input.value;\r\n     }\r\n  \r\n }\r\n\r\n export let slider=new Slider();\r\n\r\n\r\n","import {slider} from './slider.js';\r\n\r\nimport './slider.js';\r\n\r\n\r\n class App{\r\n    constructor(){\r\n     this.checkBoxes=document.querySelectorAll('.checkBox');\r\n     this.choicesOption={number:0,isLengthGreatherThanEight:false};\r\n     this.passwordLength;\r\n     this.StrengthBoxesColore;\r\n     this.passwordContent=document.querySelector('#password')\r\n     this.SECURE_LENGTH=8;\r\n     this.BoxePower=document.querySelector('.password-powerBox');\r\n     this.PASS_STRENGTH_OPTCION_FOR_LESS_SECURE={1:'too week',2 :'week',3:'week',4:'medium'};\r\n     this.PASS_STRENGTH_OPTCION_FOR_MORE_SECURE={1:'too week',2 :'week',3:'medium',4:'strong'};\r\n     this.checkBoxesArray=Array.from(this.checkBoxes);\r\n     this.messge=document.createElement('h1');\r\n     this.passwordBgColor=Array.from(this.BoxePower.querySelectorAll(' li'));\r\n     this.userChoice;\r\n     this.copiedMessg=document.querySelector('.copyPssMsg')\r\n     this.CopyIcon=document.querySelector('.header__copiIcon');\r\n     this.mainFooter=document.querySelector('.main__footer');\r\n     // EVENT LISTENER\r\n     this.CopyIcon.addEventListener('click',this.copyPasswordToClipboard.bind(this));\r\n    this.checkBoxes.forEach(function(element){\r\n    element.addEventListener('click',function(e){\r\n    myApp.selectChoice(e.target);\r\n   \r\n  })})\r\n    }\r\n  // METHODES\r\n  \r\n   selectChoice(element){\r\n    element.classList.toggle('colorizeChoiceBox'); \r\n    //   now i need to update the length of how many choice do i have\r\n    this.userChoice=this.checkBoxesArray.filter(v=>v.classList.contains('colorizeChoiceBox'))\r\n    this.choicesOption.number=this.userChoice.length;\r\n  //   now we also need to check the label for how we many charectere we have(password length prefered by the user)\r\n    this.passwordLength= slider.label.textContent;\r\n    // update the user choices depending on user selection\r\n    this.choicesOption.isLengthGreatherThanEight= this.passwordLength > this.SECURE_LENGTH ? true:false;\r\n    this.getPasswordPower();\r\n  }\r\n  \r\n   getPasswordPower(){\r\n    if(!this.choicesOption.isLengthGreatherThanEight){\r\n        let STRENGTH_LESS_SECURE= this.PASS_STRENGTH_OPTCION_FOR_LESS_SECURE[ `${this.choicesOption.number}`];\r\n        // we need to show the message to user\r\n        this.showUserMessage(STRENGTH_LESS_SECURE);\r\n        // now we need to choose how many boxes should be colorized \r\n         this.colorizeChoiceBoxDependOnPassworedPower(STRENGTH_LESS_SECURE);\r\n      }\r\n      else {\r\n        let STRENGTH_MORE_SECURE= this.PASS_STRENGTH_OPTCION_FOR_MORE_SECURE[ `${this.choicesOption.number}`];\r\n        // let keyForMoreThanEight=getKeyByValue(passwordStrengthOptionsForLengthMoreThanEight, strengthForLenghtMoreThanEight);\r\n        this.showUserMessage(STRENGTH_MORE_SECURE);\r\n        // now we need to choose how many boxes should be colorized \r\n        this.colorizeChoiceBoxDependOnPassworedPower(STRENGTH_MORE_SECURE)\r\n      }\r\n  }\r\n  \r\n  // this function responsible for getting the strength of the choisen password options and show it to the user\r\n  showUserMessage(value='select choice'){\r\n    this.userChoiceStrength(value);\r\n    this.messge.textContent=`${value}`;\r\n    this.mainFooter.append(this.messge);\r\n    this.messge.classList.add('message');\r\n    this.BoxePower.insertAdjacentElement('beforebegin',this.messge);\r\n  }\r\n  \r\n  // function to check if user select choice or not \r\n  userChoiceStrength(value){\r\n    if( value=='select choice' ){\r\n       this.messge.style.color='red';\r\n       this.hideElementAfterSomeTime(this.messge,2000);\r\n     } \r\n      else{\r\n         this.messge.style.color='white'\r\n        this.messge.style.display='block';\r\n     }\r\n  }\r\n  \r\n  // colorize the boxes with the color representing the power of the selected password choices\r\n   colorizeChoiceBoxDependOnPassworedPower(passStrength){\r\n    // lets get the element to be colorized\r\n     this.StrengthBoxesColore=this.passwordBgColor.slice(0,this.choicesOption.number);\r\n    // lets make bg transparent from all element not to be clorized\r\n    this.passwordBgColor.forEach(element=>{\r\n      if (!this.StrengthBoxesColore.includes(element))  element.className='passBgPower';\r\n     })\r\n      //  add color for bg depending on password strength\r\n    this.StrengthBoxesColore.forEach((element)=>{\r\n       element.className= `passBgPower pass-${passStrength.replace(/\\s+/g,'')}`;\r\n    })\r\n  }\r\n  \r\n  // function responsible for copying password to clipboard\r\n  copyPasswordToClipboard() {\r\n    if(this.passwordContent.textContent=='P4$5W0rD!')return;\r\n     this.copiedMessg.style.display='block';\r\n     // Copy the text inside the text field\r\n    navigator.clipboard.writeText(this.passwordContent.textContent);\r\n    // hide the message after 2 sec\r\n   this.hideElementAfterSomeTime(this.copiedMessg,2000);\r\n  \r\n  }\r\n  \r\n   hideElementAfterSomeTime(element,timing){\r\n    return setTimeout(function(){ element.style.display='none',timing})\r\n  }\r\n  getLength(){\r\n    return   this.passwordLength=slider.label.textContent;\r\n   \r\n   }\r\n  }\r\n  \r\n  export let myApp=new App();\r\n  \r\n  \r\n  \r\n  \r\n  ","import {myApp} from './app.js';\r\n\r\nclass GeneratePassword{\r\n    constructor(){\r\n        this.GeneratePasswordBtn=document.querySelector('.generateBtn');\r\n        this.passwordOptions={\r\n            uppercase:'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n            lowercase:'abcdefghijklmnopqrstuvwxyz',\r\n            number:'0123456789',\r\n            symbols:'ŽŠ/.<#&éè-çàç)=$ù!°*€'\r\n          } ;\r\n    this.GeneratePasswordBtn.addEventListener('click',this.GeneratePasswordForUser.bind(this))\r\n    }\r\n\r\n    // methodes\r\n      // Generate Random String of a specified length\r\n   generateRandomString(length,userSelectSomething) {\r\n    let character=this.passwordOptions.lowercase;\r\n  \r\n     if (userSelectSomething){\r\n       myApp.userChoice.forEach(choice=>{\r\n      let attributeName=choice.getAttribute('data-type');\r\n      character+=`${this.passwordOptions[`${attributeName}`]}` ;\r\n   \r\n     })\r\n    }\r\n      let result = ' ';\r\n      const charactersLength = character.length;\r\n      for ( let i = 0; i < +length; i++ ) {\r\n          result += character.charAt(Math.floor(Math.random() * charactersLength));\r\n      }\r\n      return result;\r\n  }\r\n\r\n// function that takes user prefrencies and generate a random password accordingly\r\n   GeneratePasswordForUser(){ \r\n    myApp.getLength();\r\n    if ((!myApp.userChoice && myApp.passwordLength==0) || (myApp.passwordLength==0) ){\r\n      myApp.passwordContent.textContent=''\r\n      alert('Please make sure that length is at least 1');\r\n      return;\r\n    }\r\n    // we assuming that the user hasn't enetered anything of choice yet\r\n    myApp.passwordContent.style.color='white'\r\n    if (!myApp.userChoice){\r\n     myApp.passwordContent.textContent=this.generateRandomString(myApp.passwordLength);\r\n  \r\n    }else{\r\n      // now lets handle when user select somthing\r\n      myApp.passwordContent.textContent=this.generateRandomString(myApp.passwordLength,true);\r\n    }\r\n   }\r\n}\r\n\r\n\r\nlet generateMyPassword=new GeneratePassword();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //Local varieble of this module\r\n// let GeneratePasswordBtn=document.querySelector('.generateBtn');\r\n// let passwordOptions={\r\n//     uppercase:'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n//     lowercase:'abcdefghijklmnopqrstuvwxyz',\r\n//     number:'0123456789',\r\n//     symbols:'ŽŠ/.<#&éè-çàç)=$ù!°*€'\r\n//   } ;\r\n"],"names":["$18c5e7d0052c99f9$export$b38bf4f33e9e4c25","constructor","this","input","document","querySelector","label","addEventListener","intialieValue","bind","innerHTML","value","$0a885b5243affea6$export$dee08b9cc7ef32d6","checkBoxes","querySelectorAll","choicesOption","number","isLengthGreatherThanEight","passwordLength","StrengthBoxesColore","passwordContent","SECURE_LENGTH","BoxePower","PASS_STRENGTH_OPTCION_FOR_LESS_SECURE","PASS_STRENGTH_OPTCION_FOR_MORE_SECURE","checkBoxesArray","Array","from","messge","createElement","passwordBgColor","userChoice","copiedMessg","CopyIcon","mainFooter","copyPasswordToClipboard","forEach","element","e","selectChoice","target","classList","toggle","filter","v","contains","length","textContent","getPasswordPower","STRENGTH_MORE_SECURE","showUserMessage","colorizeChoiceBoxDependOnPassworedPower","STRENGTH_LESS_SECURE","userChoiceStrength","append","add","insertAdjacentElement","style","color","hideElementAfterSomeTime","display","passStrength","slice","includes","className","replace","navigator","clipboard","writeText","timing","setTimeout","getLength","GeneratePasswordBtn","passwordOptions","uppercase","lowercase","symbols","GeneratePasswordForUser","generateRandomString","userSelectSomething","character","choice","attributeName","getAttribute","result","charactersLength","i","charAt","Math","floor","random","alert"],"version":3,"file":"index.e5048d93.js.map"}